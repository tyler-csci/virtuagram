service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{uid} {
      allow get: if request.auth.uid != null;
      allow list: if request.auth.uid != null;
      
      allow create: if request.auth.uid != null &&
                    request.auth.uid == uid &&
                    request.resource.data.keys().hasAll(['firstName', 'lastName', 'username']) &&
                    request.resource.data.username.size() > 2 &&
                    request.resource.data.username.size() <= 20;

      allow update: if request.auth.uid != null &&
                       request.auth.uid == uid;

      allow delete: if request.auth.uid != null &&
                       request.auth.uid == uid;
    }
    match /posts/{postID} {
        allow get: if exists(/databases/$(database)/documents/users/$(request.auth.uid));
        allow list: if exists(/databases/$(database)/documents/users/$(request.auth.uid));

        allow create: if exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                        request.resource.data.keys().hasAll(['objURL', 'author', 'description'])

        allow update: if request.auth.uid != null &&
                                request.auth.uid == uid;
    }
    match /feeds/{uid} {
          allow get: if request.auth.uid == uid;
          allow list: if request.auth.uid == uid;

          allow create: if request.auth.uid != null &&
                        request.auth.uid == uid &&
                        request.resource.data.keys().hasAll(['follows'])

          allow update: if request.auth.uid != null &&
                        request.auth.uid == uid;
    }
  }
}